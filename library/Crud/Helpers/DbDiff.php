<?php
/**
 * must define $_metadata and the ctor !!!
 *//**
 * Class Name
 *
 * @category  Crud class
 * @package   Crud
 * @author    elvis ciotti <elvis@phpntips.com>
 * @copyright 2010 Phpntips.com
 * @license   http://framework.zend.com/license/new-bsd  New BSD License
 * @version   Release: 1.0
 * @link      http://www.phpntips.com/crud
 */

class Crud_Helpers_DbDiff {

	/**
	 * Export the schema of the database into an array.
	 *
	 * @param string $config Config details for the database connection.
	 * @param string $name Name or description of the database.
	 * @return mixed|string An array structure of the exported schema, or an error string.
	 */
	function export($config, $name) {

		$db = mysql_connect($config['host'], $config['user'],
			$config['password']) or die;

		if (!$db) {
			die('Could not connect: ' . mysql_error());
		}

		if (!mysql_select_db($config['name'], $db)) {
			die('cannot select db '.$config['name'] .'-'. mysql_error());
		}

                #
                $result = mysql_query("SHOW TABLE STATUS");
		while ($row = mysql_fetch_assoc($result)) {
			$tablesProp[$row['Name']] = $row; #'Engine', 'Create_options', 'Row_format', 'Engine','Version'
		}
                #pd($tablesProp);

		$result = mysql_query("SHOW TABLES");
		while ($row = mysql_fetch_row($result)) {
			$tables[$row[0]] = array();
		}

		foreach ($tables as $table_name => $fields) {

			$result = mysql_query("SHOW  FULL  COLUMNS FROM `".$table_name."`", $db) or die(mysql_error());
			while ($row = mysql_fetch_assoc($result)) {
                                unset($row['Privileges']);
                                unset($row['Comment ']);
                                #$row['encoding'] = rand(1,3); #TODO
				$tables[$table_name][$row['Field']] = $row;

			}
                        #add table props
                        $tables[$table_name]['TABLE_PROPERTY'] = array(
                            'Engine' => $tablesProp[$table_name]['Engine'],
                            'Version' => $tablesProp[$table_name]['Version'],
                            'Row_format' => $tablesProp[$table_name]['Row_format'],
                            'Collation' => $tablesProp[$table_name]['Collation'],
                        );#  $tablesProp[$table_name]['encoding'] = rand(1,3);##TODOarray();
                        #$tablesProp[$table_name]['collaction'] = array();


		}

		#mysql_close();

		$data = array(
			'name' => $name,
			'time' => time(),
			'tables' => $tables,
                        'tablesPROP' => $tablesProp
		);

		return $data;
	}

	/**
	 * Compare two schemas (as generated by the 'export' method.)
	 *
	 * @param string $schema1 The first database schema.
	 * @param string $schema2 The second database schema.
	 * @return void
	 */
	function compare($schema1, $schema2) {

		$tables1 = array_keys($schema1['tables']);
		$tables2 = array_keys($schema2['tables']);

		$tables = array_unique(array_merge($tables1, $tables2));

		$results = array();

		foreach ($tables as $table_name) {

			// Check tables exist in both databases

			if (!isset($schema1['tables'][$table_name])) {

				$results[$table_name][] = '<em>' . $schema1['name']
					. '</em> is missing table: <code>' . $table_name
					. '</code>.';

				continue;
			}

			if (!isset($schema2['tables'][$table_name])) {

				$results[$table_name][] = '<em>' . $schema2['name']
					. '</em> is missing table: <code>' . $table_name
					. '</code>.';

				continue;
			}

			// Check fields exist in both tables

			$fields = array_merge($schema1['tables'][$table_name],
				$schema2['tables'][$table_name]);

			foreach ($fields as $field_name => $field) {

				if (!isset($schema1['tables'][$table_name][$field_name])) {

					$results[$table_name][] = '<em>' . $schema1['name']
						. '</em> is missing field: <code>' . $field_name
						. '</code>';

					continue;
				}

				if (!isset($schema2['tables'][$table_name][$field_name])) {

					$results[$table_name][] = '<em>' . $schema2['name']
						. '</em> is missing field: <code>' . $field_name
						. '</code>';

					continue;
				}

				// Check that the specific parameters of the fields match

				$s1_params = $schema1['tables'][$table_name][$field_name];
				$s2_params = $schema2['tables'][$table_name][$field_name];

				foreach ($s1_params as $name => $details) {
					if ($s1_params[$name] != $s2_params[$name]) {
						$results[$table_name][] = ($field_name=='TABLE_PROPERTY'?'':'Field').' <code>' . $field_name
							. '</code> differs between databases for parameter \''
							. $name . '\'. <em>' . $schema1['name']
							. '</em> has \'' . $s1_params[$name]
							. '\' and <em>' . $schema2['name']
							. '</em> has \'' . $s2_params[$name] . '\'.';
					}
				}
			}
		}

		return $results;
	}
}